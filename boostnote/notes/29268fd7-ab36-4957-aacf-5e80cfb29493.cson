createdAt: "2018-09-07T02:32:56.997Z"
updatedAt: "2018-09-07T02:33:11.150Z"
type: "MARKDOWN_NOTE"
folder: "2fd5e23bbfb9021cdbbc"
title: "A 1074"
content: '''
  # A 1074
  ```C++
  #define _CRT_SECURE_NO_WARNINGS
  #include<cstdio>
  #include<math.h>
  #include<string.h>
  #include<iostream>
  #include<queue>
  #include<algorithm>
  
  struct node {
  	int address;
  	int data;
  	int next;
  	int order;
  }list[100010];
  
  bool cmp(node a, node b)
  {
  	return a.order < b.order;
  }
  
  int main()
  {
  	for (int i = 0; i < 100010; i++)
  	{
  		list[i].order = 100010;
  	}
  	int begin, n, k;
  	scanf("%d %d %d", &begin, &n, &k);
  	int address;
  	for (int i = 0; i < n; i++)
  	{
  		scanf("%d", &address);
  		scanf("%d %d", &list[address].data, &list[address].next);
  		list[address].address = address;
  	}
  	int p = begin,count=0;
  	while (p != -1)
  	{
  		list[p].order = count++;
  		p = list[p].next;
  	}
  
  	std::sort(list, list + 100010, cmp);
  	
  	for (int i = 0; i+k <=count; i += k)
  	{
  		std::reverse(list + i, list + i + k);
  		
  	}
  	for (int i = 0; i < count-1; i++)
  	{
  		list[i].next = list[i + 1].address;
  	}
  	list[count - 1].next = -1;
  
  	for (int i = 0; i < count; i++)
  	{
  		if(list[i].next==-1)
  			printf("%05d %d %d\\n", list[i].address, list[i].data, list[i].next);
  		else
  			printf("%05d %d %05d\\n", list[i].address, list[i].data, list[i].next);
  	}
  
  }
  ```
'''
tags: []
isStarred: false
isTrashed: false
