(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{137:function(t,e,a){t.exports=a.p+"assets/img/mitk_18.5043ae5e.png"},138:function(t,e,a){t.exports=a.p+"assets/img/mitk_19.1b793de7.png"},139:function(t,e,a){t.exports=a.p+"assets/img/mitk_20.aea27069.png"},140:function(t,e,a){t.exports=a.p+"assets/img/mitk_21.d75bd87f.png"},141:function(t,e,a){t.exports=a.p+"assets/img/mitk_22.02f73cc1.png"},157:function(t,e,a){"use strict";a.r(e);var s=a(0),i=Object(s.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"《mitk-添加插件教程》"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#《mitk-添加插件教程》","aria-hidden":"true"}},[t._v("#")]),t._v(" 《MITK 添加插件教程》")]),t._v(" "),s("p",[s("em",[s("a",{attrs:{href:"http://docs.mitk.org/nightly/NewPluginPage.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方教程"),s("OutboundLink")],1),s("br")])]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("插件")]),t._v(" "),s("p",[t._v("MITK中有三个概念需要理解：module,plugin,view，这里按我的理解简单解释三者的区别：")]),t._v(" "),s("ul",[s("li",[t._v("module: 为了便于使用，将一些常用的算法或者视图模块封装而成的共享库，编写需要修改cmake文件，参见"),s("code",[t._v("MITK/Modules")]),t._v("中的内容")]),t._v(" "),s("li",[t._v("plugin: 同样是共享库，但相比于module多了方便插拔的特性，编写不需要修改cmake，一般自己的扩展都使用plugin的方式")]),t._v(" "),s("li",[t._v("view: MITK程序中导航栏上每个按钮对应一个view，一个plugin可以有多个view")])])]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("编译")]),t._v(" "),s("p",[t._v("MITK有源码目录，与superbuild目录，编译好的程序中一切修改都是对MITK源码目录中的文件进行的修改，因此即使编译了两份程序，如果共用的是同一份源码目录，那么是一样的")])]),t._v(" "),s("h2",{attrs:{id:"详细步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#详细步骤","aria-hidden":"true"}},[t._v("#")]),t._v(" 详细步骤")]),t._v(" "),s("h3",{attrs:{id:"_1-使用mitkplugingenerator-exe生成插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-使用mitkplugingenerator-exe生成插件","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.使用MitkPluginGenerator.exe生成插件")]),t._v(" "),s("p",[t._v("该步骤会在指定的目录生成一个以插件名称命名的文件夹")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("D:\\mitk\\MITK-superbuild4\\MITK-build\\bin\\Debug"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(".\\MitkPluginGenerator.exe  --plugin-symbolic-name org.mitk.testPlugin --view-name "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyView"')]),t._v(" --out-dir "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"D:\\mitk\\MyPlugin"')]),t._v("\n")])])]),s("p",[t._v("具体参数请使用"),s("code",[t._v("-h")]),t._v("查看，其中需要注意的是：")]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("plugin-symbolic-name")])]),t._v("：插件的名称，命名必须符合"),s("code",[t._v("^org.mitk.[a-zA-Z0-9_]+$")]),t._v("或者"),s("code",[t._v("^org.blueberry.[a-zA-Z0-9_]+$")]),t._v("，否则在后面编译的时候会出现"),s("strong",[t._v("MSB6006")]),t._v("的错误，该命名规范是在mitk源码目录CmakeLists.txt中定义的，可以自己更改，官方教程中使用"),s("code",[t._v("org.mycompany.myplugin")]),t._v("在没有更改规则的情况下是没法使用的！（这是一个神坑，无力吐槽）")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("view-name")])]),t._v("：视图的名称，简单理解，一个视图，会产生导航栏上的一个图标")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(137),alt:""}}),t._v(" "),s("img",{attrs:{src:a(138),alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_2-将插件文件夹放入源码目录，并修改pluginlist-cmake文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-将插件文件夹放入源码目录，并修改pluginlist-cmake文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.将插件文件夹放入源码目录，并修改"),s("code",[t._v("PluginList.cmake")]),t._v("文件")]),t._v(" "),s("p",[s("img",{attrs:{src:a(139),alt:""}}),t._v(" "),s("img",{attrs:{src:a(140),alt:""}}),t._v(" "),s("br"),t._v("on就是cmake的时候默认✔")]),t._v(" "),s("h3",{attrs:{id:"_3-编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-编译","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.编译")]),t._v(" "),s("ul",[s("li",[t._v("如果是创建新项目，则编译方式与"),s("router-link",{attrs:{to:"/docs/mitk/page1.html"}},[t._v("MITK编译教程")]),t._v(" 中一致，不过多赘述")],1),t._v(" "),s("li",[t._v("这里说明的是使用已经编译好的目录的方法："),s("br"),t._v("\nbuild目录选择为你原先编译的superbuild目录下的build目录，在第一configure后会出现更多的选项，其中包括各个pugin的选项，选择你需要编译的plugin即可，后续与"),s("router-link",{attrs:{to:"/docs/mitk/page1.html"}},[t._v("MITK编译教程")]),t._v(" 中一致\n"),s("img",{attrs:{src:a(141),alt:""}})],1)])])},[],!1,null,null,null);e.default=i.exports}}]);